"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[217],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>f});var i=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},o=Object.keys(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var c=i.createContext({}),s=function(t){var e=i.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},d=function(t){var e=s(t.components);return i.createElement(c.Provider,{value:e},t.children)},p="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},m=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,c=t.parentName,d=l(t,["components","mdxType","originalType","parentName"]),p=s(n),m=r,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return n?i.createElement(f,a(a({ref:e},d),{},{components:n})):i.createElement(f,a({ref:e},d))}));function f(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l[p]="string"==typeof t?t:r,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},89803:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var i=n(87462),r=(n(67294),n(3905));const o={sidebar_position:2},a="Installation",l={unversionedId:"installation",id:"installation",title:"Installation",description:"Method 1 - HttpService",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/semantic-version/docs/installation",draft:!1,editUrl:"https://github.com/howmanysmall/semantic-version/edit/main/docs/installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Getting Started with SemanticVersion",permalink:"/semantic-version/docs/intro"}},c={},s=[{value:"Method #1 - HttpService",id:"method-1---httpservice",level:3},{value:"Method 2 - Wally",id:"method-2---wally",level:3},{value:"Next",id:"next",level:2}],d={toc:s},p="wrapper";function u(t){let{components:e,...n}=t;return(0,r.kt)(p,(0,i.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("h3",{id:"method-1---httpservice"},"Method #1 - HttpService"),(0,r.kt)("p",null,"This method uses ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpService")," to install SemanticVersion."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In Roblox Studio, paste the following command into your command bar."),(0,r.kt)("li",{parentName:"ol"},"Run the following command:")),(0,r.kt)("textarea",{readonly:!0,rows:"5",onClick:t=>t.target.select(),style:{width:"100%"}},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal HttpService = game:GetService("HttpService")\nlocal HttpEnabled = HttpService.HttpEnabled\nHttpService.HttpEnabled = true\nlocal function RequestAsync(RequestDictionary)\n\treturn HttpService:RequestAsync(RequestDictionary)\nend\nlocal function GetAsync(Url, Headers)\n\tHeaders["cache-control"] = "no-cache"\n\tlocal Success, ResponseDictionary = pcall(RequestAsync, {\n\t\tHeaders = Headers;\n\t\tMethod = "GET";\n\t\tUrl = Url;\n\t})\n\tif not Success then\n\t\treturn false, ResponseDictionary\n\tend\n\tif not ResponseDictionary.Success then\n\t\treturn false, string.format("HTTP %*: %*", ResponseDictionary.StatusCode, ResponseDictionary.StatusMessage)\n\tend\n\treturn ResponseDictionary.Body\nend\nlocal function Initify(Root)\n\tlocal InitFile = Root:FindFirstChild("init") or Root:FindFirstChild("init.lua") or Root:FindFirstChild("init.client.lua") or Root:FindFirstChild("init.server.lua") or Root:FindFirstChild("init.luau") or Root:FindFirstChild("init.client.luau") or Root:FindFirstChild("init.server.luau")\n\tif InitFile then\n\t\tInitFile.Name = Root.Name\n\t\tInitFile.Parent = Root.Parent\n\t\tfor _, Child in Root:GetChildren() do\n\t\t\tChild.Parent = InitFile\n\t\tend\n\t\tRoot:Destroy()\n\t\tRoot = InitFile\n\tend\n\tfor _, Child in Root:GetChildren() do\n\t\tInitify(Child)\n\tend\n\treturn Root\nend\nlocal FilesList = HttpService:JSONDecode(assert(GetAsync(\n\t"https://api.github.com/repos/bura-games/semantic-version/contents/src",\n\t{accept = "application/vnd.github.v3+json"}\n)))\nlocal SemanticVersion = Instance.new("Folder")\nSemanticVersion.Name = "SemanticVersion"\nfor _, FileData in FilesList do\n\tlocal ModuleScript = Instance.new("ModuleScript")\n\tModuleScript.Name = tostring(string.match(FileData.name, "(%w+)%.lua") or string.match(FileData.name, "(%w+)%.luau"))\n\tlocal Success, Source = GetAsync(FileData.download_url, {})\n\tif not Success then\n\t\tModuleScript.Source = string.format("-- %*", tostring(Source))\n\telse\n\t\tModuleScript.Source = tostring(Success)\n\tend\n\tModuleScript.Parent = SemanticVersion\nend\nSemanticVersion.Parent = ReplicatedStorage\nInitify(SemanticVersion)\nHttpService.HttpEnabled = HttpEnabled'),(0,r.kt)("h3",{id:"method-2---wally"},"Method 2 - Wally"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Setup ",(0,r.kt)("a",{parentName:"li",href:"https://wally.run/"},"Wally")," by using ",(0,r.kt)("inlineCode",{parentName:"li"},"wally init"),"."),(0,r.kt)("li",{parentName:"ol"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"howmanysmall/semantic-version")," as a dependency.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nSemanticVersion = "howmanysmall/semantic-version@^1.0.0"\n')),(0,r.kt)("h2",{id:"next"},"Next"),(0,r.kt)("p",null,"Now, check out the ",(0,r.kt)("a",{parentName:"p",href:"/api/SemanticVersion"},"API reference"),"!"))}u.isMDXComponent=!0}}]);